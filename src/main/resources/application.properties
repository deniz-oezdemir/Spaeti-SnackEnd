# === Local development (default) ===
spring.application.name=spring-ecommerce
server.port=8080
server.error.whitelabel.enabled=false

# H2 in-memory DB for dev/tests
#spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:test;MODE=PostgreSQL
#spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Do not auto-run schema/data locally (tests seed manually if needed)
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=never

# JWT / Security (placeholders for local only)
security.jwt.token.secret-key=
security.jwt.token.expire-time-millis=3600000

# Stripe (placeholder for local only)
stripe.secret=

# Mail (placeholder for local only)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Observability
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Slack
slack.bot.token=

# import local secrets file from ec2 instance
spring.config.import=optional:file:/home/ubuntu/secrets/application-secrets.properties

#logging strategy

#shows INFO (and WARNS/ERROR) by default
logging.level.root=INFO
logging.level.ecommerce=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN

# add requestId (from MDC) to every console line
logging.pattern.console=%d{ISO8601} %-5level [%X{requestId:-}] %logger{36} - %msg%n

# aspect is off by default
logging.tracing.service.enabled=false

# file paths used by logback-spring.xml
APP_LOG_FILE=/home/ubuntu/logs/app.log
ERROR_LOG_FILE=/home/ubuntu/logs/error.log

spring.profiles.active=${ACTIVE_PROFILE}

